;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit MAC : 
  module MAC : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip c_in : UInt<8>[16], flip r_in : UInt<8>, flip o_in : UInt<20>, o_out : UInt<20>, flip bit : UInt<4>, flip buffer : UInt<1>, flip c_state : UInt<3>, flip d_state : UInt<2>, debug : UInt<32>}
    
    reg o1_reg : UInt<20>, clock @[custum_array.scala 23:19]
    reg o2_reg : UInt<20>, clock @[custum_array.scala 24:19]
    when io.buffer : @[custum_array.scala 26:19]
      io.o_out <= o2_reg @[custum_array.scala 27:14]
      skip @[custum_array.scala 26:19]
    else : @[custum_array.scala 28:15]
      io.o_out <= o1_reg @[custum_array.scala 29:14]
      skip @[custum_array.scala 28:15]
    node _T = eq(io.c_state, UInt<3>("h00")) @[custum_array.scala 32:19]
    when _T : @[custum_array.scala 32:33]
      when io.buffer : @[custum_array.scala 33:21]
        o1_reg <= UInt<1>("h00") @[custum_array.scala 34:14]
        skip @[custum_array.scala 33:21]
      else : @[custum_array.scala 35:17]
        o2_reg <= UInt<1>("h00") @[custum_array.scala 36:14]
        skip @[custum_array.scala 35:17]
      skip @[custum_array.scala 32:33]
    else : @[custum_array.scala 38:37]
      node _T_1 = eq(io.c_state, UInt<3>("h01")) @[custum_array.scala 38:24]
      when _T_1 : @[custum_array.scala 38:37]
        when io.buffer : @[custum_array.scala 39:21]
          node _o1_reg_T = mul(io.c_in[io.bit], io.r_in) @[custum_array.scala 40:42]
          node _o1_reg_T_1 = add(o1_reg, _o1_reg_T) @[custum_array.scala 40:24]
          node _o1_reg_T_2 = tail(_o1_reg_T_1, 1) @[custum_array.scala 40:24]
          o1_reg <= _o1_reg_T_2 @[custum_array.scala 40:14]
          o2_reg <= io.o_in @[custum_array.scala 41:14]
          skip @[custum_array.scala 39:21]
        else : @[custum_array.scala 42:17]
          node _o2_reg_T = mul(io.c_in[io.bit], io.r_in) @[custum_array.scala 43:42]
          node _o2_reg_T_1 = add(o2_reg, _o2_reg_T) @[custum_array.scala 43:24]
          node _o2_reg_T_2 = tail(_o2_reg_T_1, 1) @[custum_array.scala 43:24]
          o2_reg <= _o2_reg_T_2 @[custum_array.scala 43:14]
          o1_reg <= io.o_in @[custum_array.scala 44:14]
          skip @[custum_array.scala 42:17]
        skip @[custum_array.scala 38:37]
      else : @[custum_array.scala 46:39]
        node _T_2 = eq(io.c_state, UInt<3>("h02")) @[custum_array.scala 46:25]
        when _T_2 : @[custum_array.scala 46:39]
          when io.buffer : @[custum_array.scala 47:21]
            node _o1_reg_T_3 = mul(io.c_in[io.bit], io.r_in) @[custum_array.scala 48:42]
            node _o1_reg_T_4 = add(o1_reg, _o1_reg_T_3) @[custum_array.scala 48:24]
            node _o1_reg_T_5 = tail(_o1_reg_T_4, 1) @[custum_array.scala 48:24]
            o1_reg <= _o1_reg_T_5 @[custum_array.scala 48:14]
            o2_reg <= io.o_in @[custum_array.scala 49:14]
            skip @[custum_array.scala 47:21]
          else : @[custum_array.scala 50:17]
            node _o2_reg_T_3 = mul(io.c_in[io.bit], io.r_in) @[custum_array.scala 51:42]
            node _o2_reg_T_4 = add(o2_reg, _o2_reg_T_3) @[custum_array.scala 51:24]
            node _o2_reg_T_5 = tail(_o2_reg_T_4, 1) @[custum_array.scala 51:24]
            o2_reg <= _o2_reg_T_5 @[custum_array.scala 51:14]
            o1_reg <= io.o_in @[custum_array.scala 52:14]
            skip @[custum_array.scala 50:17]
          skip @[custum_array.scala 46:39]
        else : @[custum_array.scala 54:39]
          node _T_3 = eq(io.c_state, UInt<3>("h04")) @[custum_array.scala 54:25]
          when _T_3 : @[custum_array.scala 54:39]
            when io.buffer : @[custum_array.scala 55:21]
              o1_reg <= o1_reg @[custum_array.scala 56:14]
              o2_reg <= io.o_in @[custum_array.scala 57:14]
              skip @[custum_array.scala 55:21]
            else : @[custum_array.scala 58:16]
              o2_reg <= o2_reg @[custum_array.scala 59:14]
              o1_reg <= io.o_in @[custum_array.scala 60:14]
              skip @[custum_array.scala 58:16]
            skip @[custum_array.scala 54:39]
          else : @[custum_array.scala 62:15]
            o1_reg <= o1_reg @[custum_array.scala 63:12]
            o2_reg <= o2_reg @[custum_array.scala 64:12]
            skip @[custum_array.scala 62:15]
    node _T_4 = eq(io.d_state, UInt<2>("h01")) @[custum_array.scala 67:19]
    when _T_4 : @[custum_array.scala 67:33]
      when io.buffer : @[custum_array.scala 68:20]
        io.debug <= o1_reg @[custum_array.scala 69:16]
        skip @[custum_array.scala 68:20]
      else : @[custum_array.scala 70:17]
        io.debug <= o2_reg @[custum_array.scala 71:16]
        skip @[custum_array.scala 70:17]
      skip @[custum_array.scala 67:33]
    else : @[custum_array.scala 73:15]
      io.debug <= UInt<1>("h00") @[custum_array.scala 74:14]
      skip @[custum_array.scala 73:15]
    
