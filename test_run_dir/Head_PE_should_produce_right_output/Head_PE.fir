;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Head_PE : 
  module Head_PE : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip col_in : UInt<8>[4], col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, flip col_ctrl : UInt<2>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 95:16]
    reg col : UInt<8>, clock @[sadves.scala 96:16]
    io.row_out <= row @[sadves.scala 98:14]
    io.col_out <= col @[sadves.scala 99:14]
    reg out0 : UInt<20>, clock @[sadves.scala 101:17]
    reg out1 : UInt<20>, clock @[sadves.scala 102:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 108:15]
    when _T : @[sadves.scala 108:24]
      io.out_out <= out0 @[sadves.scala 109:16]
      skip @[sadves.scala 108:24]
    else : @[sadves.scala 110:15]
      io.out_out <= out1 @[sadves.scala 111:16]
      skip @[sadves.scala 110:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 118:15]
    when _T_1 : @[sadves.scala 118:24]
      row <= UInt<1>("h00") @[sadves.scala 119:10]
      col <= UInt<1>("h00") @[sadves.scala 120:10]
      out0 <= UInt<1>("h00") @[sadves.scala 121:10]
      out1 <= UInt<1>("h00") @[sadves.scala 122:10]
      skip @[sadves.scala 118:24]
    else : @[sadves.scala 123:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 123:21]
      when _T_2 : @[sadves.scala 123:30]
        row <= io.row_in @[sadves.scala 124:9]
        col <= io.col_in[io.col_ctrl] @[sadves.scala 125:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 127:17]
        when _T_3 : @[sadves.scala 127:26]
          node _out0_T = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 128:33]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 128:45]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 128:45]
          out0 <= _out0_T_2 @[sadves.scala 128:12]
          out1 <= io.out_in @[sadves.scala 129:12]
          skip @[sadves.scala 127:26]
        else : @[sadves.scala 130:17]
          node _out1_T = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 131:33]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 131:45]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 131:45]
          out1 <= _out1_T_2 @[sadves.scala 131:12]
          out0 <= io.out_in @[sadves.scala 132:12]
          skip @[sadves.scala 130:17]
        skip @[sadves.scala 123:30]
      else : @[sadves.scala 134:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 134:21]
        when _T_4 : @[sadves.scala 134:30]
          row <= io.row_in @[sadves.scala 135:9]
          col <= io.col_in[io.col_ctrl] @[sadves.scala 136:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 138:17]
          when _T_5 : @[sadves.scala 138:26]
            node _out0_T_3 = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 139:33]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 139:45]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 139:45]
            out0 <= _out0_T_5 @[sadves.scala 139:12]
            out1 <= out1 @[sadves.scala 140:12]
            skip @[sadves.scala 138:26]
          else : @[sadves.scala 141:17]
            node _out1_T_3 = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 142:33]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 142:45]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 142:45]
            out1 <= _out1_T_5 @[sadves.scala 142:12]
            out0 <= out0 @[sadves.scala 143:12]
            skip @[sadves.scala 141:17]
          skip @[sadves.scala 134:30]
    io.debug[0] <= out0 @[sadves.scala 147:15]
    io.debug[1] <= out1 @[sadves.scala 148:15]
    
