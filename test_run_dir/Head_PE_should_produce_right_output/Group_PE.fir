;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Group_PE : 
  module Head_PE : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>[4], col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, flip col_ctrl : UInt<2>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 95:16]
    reg col : UInt<8>, clock @[sadves.scala 96:16]
    io.row_out <= row @[sadves.scala 98:14]
    io.col_out <= col @[sadves.scala 99:14]
    reg out0 : UInt<20>, clock @[sadves.scala 101:17]
    reg out1 : UInt<20>, clock @[sadves.scala 102:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 108:15]
    when _T : @[sadves.scala 108:24]
      io.out_out <= out0 @[sadves.scala 109:16]
      skip @[sadves.scala 108:24]
    else : @[sadves.scala 110:15]
      io.out_out <= out1 @[sadves.scala 111:16]
      skip @[sadves.scala 110:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 118:15]
    when _T_1 : @[sadves.scala 118:24]
      row <= UInt<1>("h00") @[sadves.scala 119:10]
      col <= UInt<1>("h00") @[sadves.scala 120:10]
      out0 <= UInt<1>("h00") @[sadves.scala 121:10]
      out1 <= UInt<1>("h00") @[sadves.scala 122:10]
      skip @[sadves.scala 118:24]
    else : @[sadves.scala 123:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 123:21]
      when _T_2 : @[sadves.scala 123:30]
        row <= io.row_in @[sadves.scala 124:9]
        col <= io.col_in[io.col_ctrl] @[sadves.scala 125:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 127:17]
        when _T_3 : @[sadves.scala 127:26]
          node _out0_T = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 128:33]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 128:45]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 128:45]
          out0 <= _out0_T_2 @[sadves.scala 128:12]
          out1 <= io.out_in @[sadves.scala 129:12]
          skip @[sadves.scala 127:26]
        else : @[sadves.scala 130:17]
          node _out1_T = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 131:33]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 131:45]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 131:45]
          out1 <= _out1_T_2 @[sadves.scala 131:12]
          out0 <= io.out_in @[sadves.scala 132:12]
          skip @[sadves.scala 130:17]
        skip @[sadves.scala 123:30]
      else : @[sadves.scala 134:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 134:21]
        when _T_4 : @[sadves.scala 134:30]
          row <= io.row_in @[sadves.scala 135:9]
          col <= io.col_in[io.col_ctrl] @[sadves.scala 136:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 138:17]
          when _T_5 : @[sadves.scala 138:26]
            node _out0_T_3 = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 139:33]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 139:45]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 139:45]
            out0 <= _out0_T_5 @[sadves.scala 139:12]
            out1 <= out1 @[sadves.scala 140:12]
            skip @[sadves.scala 138:26]
          else : @[sadves.scala 141:17]
            node _out1_T_3 = mul(io.col_in[io.col_ctrl], io.row_in) @[sadves.scala 142:33]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 142:45]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 142:45]
            out1 <= _out1_T_5 @[sadves.scala 142:12]
            out0 <= out0 @[sadves.scala 143:12]
            skip @[sadves.scala 141:17]
          skip @[sadves.scala 134:30]
    io.debug[0] <= out0 @[sadves.scala 147:15]
    io.debug[1] <= out1 @[sadves.scala 148:15]
    
  module General_PE : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            node _out0_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 65:25]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 65:37]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 65:37]
            out0 <= _out0_T_5 @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            node _out1_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 68:25]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 68:37]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 68:37]
            out1 <= _out1_T_5 @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
  module General_PE_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            node _out0_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 65:25]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 65:37]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 65:37]
            out0 <= _out0_T_5 @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            node _out1_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 68:25]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 68:37]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 68:37]
            out1 <= _out1_T_5 @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
  module General_PE_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            node _out0_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 65:25]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 65:37]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 65:37]
            out0 <= _out0_T_5 @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            node _out1_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 68:25]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 68:37]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 68:37]
            out1 <= _out1_T_5 @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
  module General_PE_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            node _out0_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 65:25]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 65:37]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 65:37]
            out0 <= _out0_T_5 @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            node _out1_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 68:25]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 68:37]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 68:37]
            out1 <= _out1_T_5 @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
  module General_PE_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            node _out0_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 65:25]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 65:37]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 65:37]
            out0 <= _out0_T_5 @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            node _out1_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 68:25]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 68:37]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 68:37]
            out1 <= _out1_T_5 @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
  module General_PE_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            node _out0_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 65:25]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 65:37]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 65:37]
            out0 <= _out0_T_5 @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            node _out1_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 68:25]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 68:37]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 68:37]
            out1 <= _out1_T_5 @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
  module General_PE_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            node _out0_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 65:25]
            node _out0_T_4 = add(_out0_T_3, out0) @[sadves.scala 65:37]
            node _out0_T_5 = tail(_out0_T_4, 1) @[sadves.scala 65:37]
            out0 <= _out0_T_5 @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            node _out1_T_3 = mul(io.col_in, io.row_in) @[sadves.scala 68:25]
            node _out1_T_4 = add(_out1_T_3, out1) @[sadves.scala 68:37]
            node _out1_T_5 = tail(_out1_T_4, 1) @[sadves.scala 68:37]
            out1 <= _out1_T_5 @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
  module Group_PE : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip col_in : UInt<8>[4], col_out : UInt<8>, flip row_in : UInt<8>[8], row_out : UInt<8>[8], flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, flip col_ctrl : UInt<2>, debug : UInt<20>[2][8]}
    
    inst Head of Head_PE @[sadves.scala 169:20]
    Head.clock <= clock
    Head.reset <= reset
    inst Generals_0 of General_PE @[sadves.scala 170:58]
    Generals_0.clock <= clock
    Generals_0.reset <= reset
    inst Generals_1 of General_PE_1 @[sadves.scala 170:58]
    Generals_1.clock <= clock
    Generals_1.reset <= reset
    inst Generals_2 of General_PE_2 @[sadves.scala 170:58]
    Generals_2.clock <= clock
    Generals_2.reset <= reset
    inst Generals_3 of General_PE_3 @[sadves.scala 170:58]
    Generals_3.clock <= clock
    Generals_3.reset <= reset
    inst Generals_4 of General_PE_4 @[sadves.scala 170:58]
    Generals_4.clock <= clock
    Generals_4.reset <= reset
    inst Generals_5 of General_PE_5 @[sadves.scala 170:58]
    Generals_5.clock <= clock
    Generals_5.reset <= reset
    inst Generals_6 of General_PE_6 @[sadves.scala 170:58]
    Generals_6.clock <= clock
    Generals_6.reset <= reset
    io.col_out <= Generals_6.io.col_out @[sadves.scala 171:14]
    io.row_out[0] <= Head.io.row_out @[sadves.scala 172:17]
    io.row_out[1] <= Generals_0.io.row_out @[sadves.scala 174:19]
    io.row_out[2] <= Generals_1.io.row_out @[sadves.scala 174:19]
    io.row_out[3] <= Generals_2.io.row_out @[sadves.scala 174:19]
    io.row_out[4] <= Generals_3.io.row_out @[sadves.scala 174:19]
    io.row_out[5] <= Generals_4.io.row_out @[sadves.scala 174:19]
    io.row_out[6] <= Generals_5.io.row_out @[sadves.scala 174:19]
    io.row_out[7] <= Generals_6.io.row_out @[sadves.scala 174:19]
    Head.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 177:21]
    Generals_0.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 179:30]
    Generals_1.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 179:30]
    Generals_2.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 179:30]
    Generals_3.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 179:30]
    Generals_4.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 179:30]
    Generals_5.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 179:30]
    Generals_6.io.flow_ctrl <= io.flow_ctrl @[sadves.scala 179:30]
    wire _o_ctrls_WIRE : UInt<1>[8] @[sadves.scala 181:32]
    _o_ctrls_WIRE[0] <= UInt<1>("h00") @[sadves.scala 181:32]
    _o_ctrls_WIRE[1] <= UInt<1>("h00") @[sadves.scala 181:32]
    _o_ctrls_WIRE[2] <= UInt<1>("h00") @[sadves.scala 181:32]
    _o_ctrls_WIRE[3] <= UInt<1>("h00") @[sadves.scala 181:32]
    _o_ctrls_WIRE[4] <= UInt<1>("h00") @[sadves.scala 181:32]
    _o_ctrls_WIRE[5] <= UInt<1>("h00") @[sadves.scala 181:32]
    _o_ctrls_WIRE[6] <= UInt<1>("h00") @[sadves.scala 181:32]
    _o_ctrls_WIRE[7] <= UInt<1>("h00") @[sadves.scala 181:32]
    reg o_ctrls : UInt<1>[8], clock with : (reset => (reset, _o_ctrls_WIRE)) @[sadves.scala 181:24]
    o_ctrls[0] <= io.out_ctrl @[sadves.scala 182:14]
    Head.io.out_ctrl <= io.out_ctrl @[sadves.scala 183:20]
    o_ctrls[1] <= o_ctrls[0] @[sadves.scala 185:16]
    Generals_0.io.out_ctrl <= o_ctrls[0] @[sadves.scala 186:31]
    o_ctrls[2] <= o_ctrls[1] @[sadves.scala 185:16]
    Generals_1.io.out_ctrl <= o_ctrls[1] @[sadves.scala 186:31]
    o_ctrls[3] <= o_ctrls[2] @[sadves.scala 185:16]
    Generals_2.io.out_ctrl <= o_ctrls[2] @[sadves.scala 186:31]
    o_ctrls[4] <= o_ctrls[3] @[sadves.scala 185:16]
    Generals_3.io.out_ctrl <= o_ctrls[3] @[sadves.scala 186:31]
    o_ctrls[5] <= o_ctrls[4] @[sadves.scala 185:16]
    Generals_4.io.out_ctrl <= o_ctrls[4] @[sadves.scala 186:31]
    o_ctrls[6] <= o_ctrls[5] @[sadves.scala 185:16]
    Generals_5.io.out_ctrl <= o_ctrls[5] @[sadves.scala 186:31]
    o_ctrls[7] <= o_ctrls[6] @[sadves.scala 185:16]
    Generals_6.io.out_ctrl <= o_ctrls[6] @[sadves.scala 186:31]
    Head.io.col_ctrl <= io.col_ctrl @[sadves.scala 189:20]
    Head.io.row_in <= io.row_in[0] @[sadves.scala 192:18]
    Generals_0.io.row_in <= io.row_in[1] @[sadves.scala 194:29]
    Generals_1.io.row_in <= io.row_in[2] @[sadves.scala 194:29]
    Generals_2.io.row_in <= io.row_in[3] @[sadves.scala 194:29]
    Generals_3.io.row_in <= io.row_in[4] @[sadves.scala 194:29]
    Generals_4.io.row_in <= io.row_in[5] @[sadves.scala 194:29]
    Generals_5.io.row_in <= io.row_in[6] @[sadves.scala 194:29]
    Generals_6.io.row_in <= io.row_in[7] @[sadves.scala 194:29]
    Head.io.col_in[0] <= io.col_in[0] @[sadves.scala 197:18]
    Head.io.col_in[1] <= io.col_in[1] @[sadves.scala 197:18]
    Head.io.col_in[2] <= io.col_in[2] @[sadves.scala 197:18]
    Head.io.col_in[3] <= io.col_in[3] @[sadves.scala 197:18]
    Generals_0.io.col_in <= Head.io.col_out @[sadves.scala 198:25]
    Generals_1.io.col_in <= Generals_0.io.col_out @[sadves.scala 200:27]
    Generals_2.io.col_in <= Generals_1.io.col_out @[sadves.scala 200:27]
    Generals_3.io.col_in <= Generals_2.io.col_out @[sadves.scala 200:27]
    Generals_4.io.col_in <= Generals_3.io.col_out @[sadves.scala 200:27]
    Generals_5.io.col_in <= Generals_4.io.col_out @[sadves.scala 200:27]
    Generals_6.io.col_in <= Generals_5.io.col_out @[sadves.scala 200:27]
    io.out_out <= Head.io.out_out @[sadves.scala 202:14]
    Head.io.out_in <= Generals_0.io.out_out @[sadves.scala 203:18]
    Generals_0.io.out_in <= Generals_1.io.out_out @[sadves.scala 205:27]
    Generals_1.io.out_in <= Generals_2.io.out_out @[sadves.scala 205:27]
    Generals_2.io.out_in <= Generals_3.io.out_out @[sadves.scala 205:27]
    Generals_3.io.out_in <= Generals_4.io.out_out @[sadves.scala 205:27]
    Generals_4.io.out_in <= Generals_5.io.out_out @[sadves.scala 205:27]
    Generals_5.io.out_in <= Generals_6.io.out_out @[sadves.scala 205:27]
    Generals_6.io.out_in <= io.out_in @[sadves.scala 206:29]
    io.debug[0][0] <= Head.io.debug[0] @[sadves.scala 209:18]
    io.debug[0][1] <= Head.io.debug[1] @[sadves.scala 210:18]
    io.debug[1][0] <= Generals_0.io.debug[0] @[sadves.scala 212:20]
    io.debug[1][1] <= Generals_0.io.debug[1] @[sadves.scala 213:20]
    io.debug[2][0] <= Generals_1.io.debug[0] @[sadves.scala 212:20]
    io.debug[2][1] <= Generals_1.io.debug[1] @[sadves.scala 213:20]
    io.debug[3][0] <= Generals_2.io.debug[0] @[sadves.scala 212:20]
    io.debug[3][1] <= Generals_2.io.debug[1] @[sadves.scala 213:20]
    io.debug[4][0] <= Generals_3.io.debug[0] @[sadves.scala 212:20]
    io.debug[4][1] <= Generals_3.io.debug[1] @[sadves.scala 213:20]
    io.debug[5][0] <= Generals_4.io.debug[0] @[sadves.scala 212:20]
    io.debug[5][1] <= Generals_4.io.debug[1] @[sadves.scala 213:20]
    io.debug[6][0] <= Generals_5.io.debug[0] @[sadves.scala 212:20]
    io.debug[6][1] <= Generals_5.io.debug[1] @[sadves.scala 213:20]
    io.debug[7][0] <= Generals_6.io.debug[0] @[sadves.scala 212:20]
    io.debug[7][1] <= Generals_6.io.debug[1] @[sadves.scala 213:20]
    
