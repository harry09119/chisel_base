;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit General_PE : 
  module General_PE : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip col_in : UInt<8>, col_out : UInt<8>, flip row_in : UInt<8>, row_out : UInt<8>, flip out_in : UInt<20>, out_out : UInt<20>, flip flow_ctrl : UInt<2>, flip out_ctrl : UInt<1>, debug : UInt<20>[2]}
    
    reg row : UInt<8>, clock @[sadves.scala 22:16]
    reg col : UInt<8>, clock @[sadves.scala 23:16]
    io.row_out <= row @[sadves.scala 25:14]
    io.col_out <= col @[sadves.scala 26:14]
    reg out0 : UInt<20>, clock @[sadves.scala 28:17]
    reg out1 : UInt<20>, clock @[sadves.scala 29:17]
    node _T = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 34:15]
    when _T : @[sadves.scala 34:24]
      io.out_out <= out0 @[sadves.scala 35:16]
      skip @[sadves.scala 34:24]
    else : @[sadves.scala 36:15]
      io.out_out <= out1 @[sadves.scala 37:16]
      skip @[sadves.scala 36:15]
    node _T_1 = eq(io.flow_ctrl, UInt<1>("h00")) @[sadves.scala 44:15]
    when _T_1 : @[sadves.scala 44:24]
      row <= UInt<1>("h00") @[sadves.scala 45:10]
      col <= UInt<1>("h00") @[sadves.scala 46:10]
      out0 <= UInt<1>("h00") @[sadves.scala 47:10]
      out1 <= UInt<1>("h00") @[sadves.scala 48:10]
      skip @[sadves.scala 44:24]
    else : @[sadves.scala 49:30]
      node _T_2 = eq(io.flow_ctrl, UInt<1>("h01")) @[sadves.scala 49:21]
      when _T_2 : @[sadves.scala 49:30]
        row <= io.row_in @[sadves.scala 50:9]
        col <= io.col_in @[sadves.scala 51:9]
        node _T_3 = eq(io.out_ctrl, UInt<1>("h00")) @[sadves.scala 53:17]
        when _T_3 : @[sadves.scala 53:26]
          node _out0_T = mul(io.col_in, io.row_in) @[sadves.scala 54:25]
          node _out0_T_1 = add(_out0_T, out0) @[sadves.scala 54:37]
          node _out0_T_2 = tail(_out0_T_1, 1) @[sadves.scala 54:37]
          out0 <= _out0_T_2 @[sadves.scala 54:12]
          out1 <= io.out_in @[sadves.scala 55:12]
          skip @[sadves.scala 53:26]
        else : @[sadves.scala 56:17]
          node _out1_T = mul(io.col_in, io.row_in) @[sadves.scala 57:25]
          node _out1_T_1 = add(_out1_T, out1) @[sadves.scala 57:37]
          node _out1_T_2 = tail(_out1_T_1, 1) @[sadves.scala 57:37]
          out1 <= _out1_T_2 @[sadves.scala 57:12]
          out0 <= io.out_in @[sadves.scala 58:12]
          skip @[sadves.scala 56:17]
        skip @[sadves.scala 49:30]
      else : @[sadves.scala 60:30]
        node _T_4 = eq(io.flow_ctrl, UInt<2>("h02")) @[sadves.scala 60:21]
        when _T_4 : @[sadves.scala 60:30]
          row <= io.row_in @[sadves.scala 61:9]
          col <= io.col_in @[sadves.scala 62:9]
          node _T_5 = eq(io.out_ctrl, UInt<1>("h01")) @[sadves.scala 64:17]
          when _T_5 : @[sadves.scala 64:26]
            out0 <= io.out_in @[sadves.scala 65:12]
            out1 <= out1 @[sadves.scala 66:12]
            skip @[sadves.scala 64:26]
          else : @[sadves.scala 67:17]
            out1 <= io.out_in @[sadves.scala 68:12]
            out0 <= out0 @[sadves.scala 69:12]
            skip @[sadves.scala 67:17]
          skip @[sadves.scala 60:30]
    io.debug[0] <= out0 @[sadves.scala 73:15]
    io.debug[1] <= out1 @[sadves.scala 74:15]
    
